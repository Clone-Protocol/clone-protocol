/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as web3 from '@solana/web3.js'
import * as beet from '@metaplex-foundation/beet'
import * as beetSolana from '@metaplex-foundation/beet-solana'
import { RawDecimal, rawDecimalBeet } from './RawDecimal'
import { AssetInfo, assetInfoBeet } from './AssetInfo'
export type Pool = {
  onassetTokenAccount: web3.PublicKey
  onusdTokenAccount: web3.PublicKey
  liquidityTokenMint: web3.PublicKey
  underlyingAssetTokenAccount: web3.PublicKey
  cometLiquidityTokenAccount: web3.PublicKey
  onassetAmount: RawDecimal
  onusdAmount: RawDecimal
  liquidityTokenSupply: RawDecimal
  treasuryTradingFee: RawDecimal
  liquidityTradingFee: RawDecimal
  totalMintedAmount: RawDecimal
  suppliedMintCollateralAmount: RawDecimal
  assetInfo: AssetInfo
  deprecated: beet.bignum
}

/**
 * @category userTypes
 * @category generated
 */
export const poolBeet = new beet.BeetArgsStruct<Pool>(
  [
    ['onassetTokenAccount', beetSolana.publicKey],
    ['onusdTokenAccount', beetSolana.publicKey],
    ['liquidityTokenMint', beetSolana.publicKey],
    ['underlyingAssetTokenAccount', beetSolana.publicKey],
    ['cometLiquidityTokenAccount', beetSolana.publicKey],
    ['onassetAmount', rawDecimalBeet],
    ['onusdAmount', rawDecimalBeet],
    ['liquidityTokenSupply', rawDecimalBeet],
    ['treasuryTradingFee', rawDecimalBeet],
    ['liquidityTradingFee', rawDecimalBeet],
    ['totalMintedAmount', rawDecimalBeet],
    ['suppliedMintCollateralAmount', rawDecimalBeet],
    ['assetInfo', assetInfoBeet],
    ['deprecated', beet.u64],
  ],
  'Pool'
)
